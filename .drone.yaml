kind: pipeline
type: kubernetes
name: Build recruitunit

steps:
  - name: build recruitunit
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run
      - name: buildtarget
        path: /dist
    commands:
      - sleep 10 # give docker enough time to start
      - docker build -t recruitunit:latest .
      - docker run --rm --name recruitunit-build -v $(pwd)/dist:/app/dist recruitunit:latest

  - name: deploy recruitunit to harbor
    image: plugins/docker
    settings:
      registry: 'harbor-bitnami.default'
      repo: 'harbor-bitnami.default/homelab/recruitunit-frontend'
      username: stewart
      password: stJ0hnstuHARBOR #todo: replace with secret
      dockerfile: ./Dockerfile-nginx
      debug: true
      launch_debug: true
      insecure: true
      use_cache: false

  - name: configure bardly namespace
    image: sinlead/drone-kubectl
    failure: ignore
    settings:
      kubernetes_server:
        from_secret: drone_k8s_server
      kubernetes_cert:
        from_secret: drone_k8s_cert
      kubernetes_token:
        from_secret: drone_k8s_token
    commands:
      - kubectl create namespace bardly
      - kubectl get secret harbor-registry-credentials --namespace=default -oyaml | grep -v '^\s*namespace:\s' | kubectl apply --namespace=bardly -f -

  - name: deploy recruitunit to kubernetes
    image: sinlead/drone-kubectl
    settings:
      kubernetes_server:
        from_secret: drone_k8s_server
      kubernetes_cert:
        from_secret: drone_k8s_cert
      kubernetes_token:
        from_secret: drone_k8s_token
    commands:
      - kubectl replace -f recruitunit-manifest.yaml --namespace=bardly --force

services:
  - name: docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}
  - name: buildtarget
    temp: {}